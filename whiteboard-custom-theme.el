(deftheme whiteboard-custom
  "Face colors similar to markers on a whiteboard.")

(custom-theme-set-faces
 'whiteboard-custom
 '(Info-title-1-face ((((class color) (min-colors 89)) (:family "helv" :weight bold :height 1.728))))
 '(Info-title-2-face ((((class color) (min-colors 89)) (:family "helv" :weight bold :height 1.44))))
 '(Info-title-3-face ((((class color) (min-colors 89)) (:family "helv" :weight bold :height 1.2))))
 '(Info-title-4-face ((((class color) (min-colors 89)) (:family "helv" :weight bold))))
 '(compilation-column-number ((((class color) (min-colors 89)) (:foreground "DarkGreen"))))
 '(compilation-error ((((class color) (min-colors 89)) (:foreground "Red1"))))
 '(compilation-info ((((class color) (min-colors 89)) (:weight normal :foreground "DeepSkyBlue4"))))
 '(compilation-line-number ((((class color) (min-colors 89)) (:foreground "DarkGreen"))))
 '(cperl-array-face ((((class color) (min-colors 89)) (:foreground "SlateBlue3"))))
 '(cperl-hash-face ((((class color) (min-colors 89)) (:foreground "turquoise3"))))
 '(cperl-nonoverridable-face ((((class color) (min-colors 89)) (:foreground "orchid3"))))
 '(cursor ((t (:background "maroon4"))))
 '(dired-marked ((((class color) (min-colors 89)) (:background "dodgerblue3" :foreground "white"))))
 '(flymake-errline ((((class color) (min-colors 89)) (:background nil :underline "red"))))
 '(flymake-warnline ((((class color) (min-colors 89)) (:background nil :underline "magenta3"))))
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "DarkOrange3"))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 89)) (:foreground "gray50"))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "gray50"))))
 '(font-lock-constant-face ((t (:foreground "SlateBlue3" :weight normal))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "peru"))))
 '(font-lock-function-name-face ((t (:foreground "goldenrod3"))))
 '(font-lock-keyword-face ((t (:foreground "DodgerBlue2" :weight normal))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 89)) (:foreground "gold3"))))
 '(font-lock-reference-face ((((class color) (min-colors 89)) (:foreground "salmon"))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 89)) (:weight bold))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 89)) (:weight bold))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "burlywood4"))))
 '(font-lock-type-face ((t (:foreground "DeepSkyBlue4" :weight normal))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "SeaGreen4"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:foreground "red"))))
 '(fringe ((((class color) (min-colors 89)) (:background "gainsboro"))))
 '(highlight ((((class color) (min-colors 89)) (:background "SkyBlue1"))))
 '(ido-first-match ((((class color) (min-colors 89)) (:weight normal :foreground "DarkOrange3"))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "SeaGreen4"))))
 '(ido-subdir ((((class color) (min-colors 89)) (:foreground nil :inherit font-lock-keyword-face))))
 '(info-header-node ((((class color) (min-colors 89)) (:foreground "DeepSkyBlue1"))))
 '(info-header-xref ((((class color) (min-colors 89)) (:foreground "SeaGreen2"))))
 '(info-menu-header ((((class color) (min-colors 89)) (:family "helv" :weight bold))))
 '(info-node ((((class color) (min-colors 89)) (:foreground "DeepSkyBlue1"))))
 '(info-xref ((((class color) (min-colors 89)) (:foreground "SeaGreen4"))))
 '(isearch ((((class color) (min-colors 89)) (:background "coral2" :foreground "white"))))
 '(isearch-lazy-highlight-face ((((class color) (min-colors 89)) (:background "coral4" :foreground "white"))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:background "cadetblue" :foreground "white"))))
 '(match ((((class color) (min-colors 89)) (:background "LightPink1"))))
 '(minibuffer-prompt ((t (:foreground "DodgerBlue4"))))
 '(mode-line ((((class color) (min-colors 89)) (:background "light steel blue" :foreground "black" :box (:line-width 1 :style released-button)))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:foreground "dark slate gray" :background "aquamarine" :weight bold))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:background "medium aquamarine" :foreground "black" :box (:line-width 1 :color "medium aquamarine")))))
 '(outline-1 ((((class color) (min-colors 89)) (:foreground "Blue3"))))
 '(outline-2 ((((class color) (min-colors 89)) (:foreground "DodgerBlue"))))
 '(outline-3 ((((class color) (min-colors 89)) (:foreground "SteelBlue"))))
 '(outline-4 ((((class color) (min-colors 89)) (:foreground "RoyalBlue"))))
 '(outline-5 ((((class color) (min-colors 89)) (:foreground "DeepSkyBlue"))))
 '(primary-selection ((((class color) (min-colors 89)) (:background "blue3"))))
 '(realgud-overlay-arrow1 ((((class color) (min-colors 89)) (:foreground "DarkGreen"))))
 '(realgud-overlay-arrow2 ((((class color) (min-colors 89)) (:foreground "DarkOliveGreen"))))
 '(realgud-overlay-arrow3 ((((class color) (min-colors 89)) (:foreground "gray60"))))
 '(realgud-bp-disabled-face ((((class color) (min-colors 89)) (:foreground "gray60"))))
 '(realgud-bp-line-enabled-face ((((class color) (min-colors 89)) (:underline "red"))))
 '(realgud-bp-line-disabled-face ((((class color) (min-colors 89)) (:underline "gray60"))))
 '(realgud-file-name ((((class color) (min-colors 89)) :foreground "DarkGreen")))
 '(realgud-line-number ((((class color) (min-colors 89)) :foreground "blue3")))
 '(realgud-backtrace-number ((((class color) (min-colors 89)) :foreground "blue3" :weight bold)))
 '(region ((((class color) (min-colors 89)) (:background "SkyBlue1"))))
 '(show-paren-match-face ((((class color) (min-colors 89)) (:background "dodgerblue1" :foreground "white"))))
 '(show-paren-mismatch-face ((((class color) (min-colors 89)) (:background "red1" :foreground "white"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "Yellow4"))))
 '(default ((((class color) (min-colors 89)) (:background "whitesmoke" :foreground "black")))))

(provide-theme 'whiteboard-custom)
